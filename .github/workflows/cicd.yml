name: Deploy to AWS EC2

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      LANGCHAIN_API_KEY: ${{secrets.LANGCHAIN_API_KEY}}
      ASTRA_DB_API_ENDPOINT: ${{secrets.ASTRA_DB_API_ENDPOINT}}
      ASTRA_DB_APPLICATION_TOKEN: ${{secrets.ASTRA_DB_APPLICATION_TOKEN}}
      LANGCHAIN_PROJECT: ${{secrets.LANGCHAIN_PROJECT}}
      LANGCHAIN_TRACING_V2 : ${{secrets.LANGCHAIN_TRACING_V2}}
      LANGSMITH_ENDPOINT : ${{secrets.LANGSMITH_ENDPOINT}}


    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: "3.13"
    - name: set PYTHONPATH
      run: echo "PYTHONPATH=$GITHUB_WORKSPACE/src" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run tests
      run:  pytest

  build-and-publish:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name : Checkout code
        uses: actions/checkout@v4
        
      - name : Set up Docker Buildx
        uses : docker/setup-buildx-action@v2

      - name : Login to DockerHub
        uses : docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        
      - name : Build and push Docker image
        uses : docker/build-push-action@v4
        with :
          context : .
          file : ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME}}/ragmultimodal-fastapiapp:latest

  build-and-deploy:
    needs: build-and-publish
    runs-on: ubuntu-latest

    steps:
      - name : Deploy to EC2 instance
        uses : appleboy/ssh-action@master
        with :
          host : ${{ secrets.EC2_HOST}}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY}}
          script : |
           docker stop ragmultimodal-fastapiapp || true
           docker rm ragmultimodal-fastapiapp || true
           docker pull ${{ secrets.DOCKER_USERNAME }}/ragmultimodal-fastapiapp:latest
           docker run -d -p 8000:8000 -p 8501:8501 --env-file .env --name multimodelragappfromhub ${{ secrets.DOCKER_USERNAME }}/ragmultimodal-fastapiapp:latest





      
        

  
  
